version: '3.7'
name: ${SERVICE_NAME}
services:
  # main:
  #   container_name: main
  #   build:
  #     context: .
  #     dockerfile: docker/server/DockerFile
  #     target: development
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   ports:
  #     - 3000:3000 # local server on navigator
  #     - 9229:9229 # debug
  #   command: /usr/src/app/start.sh # start server
  #   env_file:
  #     - .env
  #   networks: 
  #     - webnet
  #   depends_on:
  #     - postgres
  #   healthcheck:
  #     test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}", "-h", "postgres"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  postgres:
    build:
      context: ./docker/database
      dockerfile: DockerFile
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - webnet
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - ./docker/database/data:/var/lib/postgresql/data
      - ./docker/database/init.sql:/docker-entrypoint-initdb.d/init.sql # Custom initialization script
    expose:
      - "5432"

  pgadmin:
      image: dpage/pgadmin4:4.23
      environment:
          PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
          PGADMIN_DEFAULT_PASSWORD: password
          PGADMIN_LISTEN_PORT: 80
      ports:
          - 15432:80
      volumes:
          - pgadmin:/var/lib/pgadmin
      depends_on:
          - postgres

  # test:
  #   container_name: test
  #   build:
  #     context: .
  #     dockerfile: docker/tests/DockerFile
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     - main
  #   command: sh -c "npm i && npm run test"
networks:
  webnet:
    driver: bridge

volumes:
  pgadmin: